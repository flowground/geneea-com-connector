{
    "title": "Geneea Natural Language Processing",
    "description": " AUTHENTICATION\nFor all calls, supply your API key. Sign up to obtain the key\n[https://www.geneea.com/pricing].\n\nOur API supports both unencrypted (HTTP) and encrypted (HTTPS) protocols.\nHowever, for security reasons, we strongly encourage using only the encrypted\nversion. \n\nThe API key should be supplied as either a request parameter user_key or in \nAuthorization header.\n\nAuthorization: user_key <YOUR_API_KEY>\n\nAPI OPERATIONS\nAll API operations can perform analysis on supplied raw text or on text\nextracted from a given URL. Optionally, one can supply additional information\nwhich can make the result more precise. An example of such information would be\nthe language of text or a particular text extractor for URL resources. \n\nThe supported types of analyses are:\n\n * lemmatization  Finds out lemmata (basic forms) of all the words in the\n   document. \n * correction  Performs correction (diacritization) on all the words in the\n   document. \n * topic detection  Determines a topic of the document, e.g. finance or sports. \n * sentiment analysis  Determines a sentiment of the document, i.e. how\n   positive or negative the document is. \n * named entity recognition  Finds named entities (like person, location, date\n   etc.) mentioned the the document. \n\nENCODING\nThe supplied text is expected to be in UTF-8 encoding, this is especially\nimportant for non-english texts.\n\nRETURNED VALUES\nThe API calls always return objects in serialized JSON format in UTF-8 encoding.\n\nIf any error occurs, the HTTP response code will be in the range 4xx \n(client-side error) or 5xx (server-side error). In this situation, the body of\nthe response will contain information about the error in JSON format, with \nexception and message values. \n\nURL LIMITATIONS\nAll the requests are semantically GET. However, for longer texts, you may run\ninto issues with URL length limit. Therefore, it's possible to always issue a \nPOST request with all the parameters encoded as a JSON in the request body. \n\nExample:\n\n\n        POST /s1/sentiment\n        Content-Type: application/json\n\n        {\"text\":\"There is no harm in being sometimes wrong - especially if one is promptly found out.\"}\n    \n\nThis is equivalent to GET /s1/sentiment?text=There%20is%20no%20harm...\n\nREQUEST LIMITATIONS\nThe API has other limitations concerning the size of the HTTP requests. The\nmaximum allowed size of any POST request body is 512 KiB. For request with a URL\nresource, the maximum allowed number of extracted characters from each such\nresource is 100,000. \n\nTERMS OF SERVICE\nBy using the API, you agree to our Terms of Service Agreement\n[https://www.geneea.com/terms.html]. \n\nMORE INFORMATION\n The Interpretor Public Documentation [https://help.geneea.com/index.html]",
    "docsUrl": "",
    "url": "https://api.apis.guru/v2/specs/geneea.com/1.0/swagger.json",
    "envVars": {},
    "credentials": {
        "fields": {
            "server": {
                "label": "Server",
                "viewClass": "SelectView",
                "model": [
                    "https://api.geneea.com/",
                    "--- Custom URL"
                ],
                "required": true
            },
            "otherServer": {
                "label": "Custom Server URL",
                "viewClass": "TextFieldView"
            },
            "auth_user_key": {
                "label": "user_key (user_key)",
                "viewClass": "TextFieldView"
            }
        }
    },
    "triggers": {
        "startFlow": {
            "main": "./lib/triggers/startFlow.js",
            "type": "polling",
            "title": "Start Flow",
            "fields": {}
        }
    },
    "actions": {
        "getInfo": {
            "main": "./lib/actions/getInfo.js",
            "title": "Information about current user account",
            "description": "getInfo",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getInfo.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "correctionGet": {
            "main": "./lib/actions/correctionGet.js",
            "title": "Performs text correction (diacritization) on the given document",
            "description": "\nPossible options:An optional parameter diacritize with values yes, no or auto indicate whether\nthe text diacritization will be performed. The default value is auto.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/correctionGet.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "correctionPost": {
            "main": "./lib/actions/correctionPost.js",
            "title": "Performs text correction (diacritization) on the given document",
            "description": "Notes:\nValid JSON cannot contain newline characters. These have to be escaped. (See\nalso Interpretor documentation\n[https://geneea.atlassian.net/wiki/display/IPD/The+Interpretor+API+Public+Documentation#TheInterpretorAPIPublicDocumentation-Interactiveonlinedocumentation]\n)\nFields text and url are mutually exclusive.\nExamples:{\"text\": \"Hello world!\"}\n\n{\"url\": \"https://en.wikipedia.org/wiki/Pyrrhuloxia\"}\n\n\nPossible options:An optional parameter diacritize with values yes, no or auto indicate whether\nthe text diacritization will be performed. The default value is auto.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/correctionPost.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "entitiesGet": {
            "main": "./lib/actions/entitiesGet.js",
            "title": "Performs named-entity recognition on the given document",
            "description": "entitiesGet",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/entitiesGet.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "entitiesPost": {
            "main": "./lib/actions/entitiesPost.js",
            "title": "Performs named-entity recognition on the given document",
            "description": "Notes:\nValid JSON cannot contain newline characters. These have to be escaped. (See\nalso Interpretor documentation\n[https://geneea.atlassian.net/wiki/display/IPD/The+Interpretor+API+Public+Documentation#TheInterpretorAPIPublicDocumentation-Interactiveonlinedocumentation]\n)\nFields text and url are mutually exclusive.\nExamples:{\"text\": \"Hello world!\"}\n\n{\"url\": \"https://en.wikipedia.org/wiki/Pyrrhuloxia\"}",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/entitiesPost.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "lemmatizeGet": {
            "main": "./lib/actions/lemmatizeGet.js",
            "title": "Performs lemmatization on the given document",
            "description": "lemmatizeGet",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/lemmatizeGet.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "lemmatizePost": {
            "main": "./lib/actions/lemmatizePost.js",
            "title": "Performs lemmatization on the given document",
            "description": "Notes:\nValid JSON cannot contain newline characters. These have to be escaped. (See\nalso Interpretor documentation\n[https://geneea.atlassian.net/wiki/display/IPD/The+Interpretor+API+Public+Documentation#TheInterpretorAPIPublicDocumentation-Interactiveonlinedocumentation]\n)\nFields text and url are mutually exclusive.\nExamples:{\"text\": \"Hello world!\"}\n\n{\"url\": \"https://en.wikipedia.org/wiki/Pyrrhuloxia\"}",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/lemmatizePost.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "sentimentGet": {
            "main": "./lib/actions/sentimentGet.js",
            "title": "Performs sentiment analysis on the given document",
            "description": "sentimentGet",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/sentimentGet.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "sentimentPost": {
            "main": "./lib/actions/sentimentPost.js",
            "title": "Performs sentiment analysis on the given document",
            "description": "Notes:\nValid JSON cannot contain newline characters. These have to be escaped. (See\nalso Interpretor documentation\n[https://geneea.atlassian.net/wiki/display/IPD/The+Interpretor+API+Public+Documentation#TheInterpretorAPIPublicDocumentation-Interactiveonlinedocumentation]\n)\nFields text and url are mutually exclusive.\nExamples:{\"text\": \"Hello world!\"}\n\n{\"url\": \"https://en.wikipedia.org/wiki/Pyrrhuloxia\"}",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/sentimentPost.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "topicGet": {
            "main": "./lib/actions/topicGet.js",
            "title": "Performs topic detection on the given document",
            "description": "topicGet",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/topicGet.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "topicPost": {
            "main": "./lib/actions/topicPost.js",
            "title": "Performs topic detection on the given document",
            "description": "Notes:\nValid JSON cannot contain newline characters. These have to be escaped. (See\nalso Interpretor documentation\n[https://geneea.atlassian.net/wiki/display/IPD/The+Interpretor+API+Public+Documentation#TheInterpretorAPIPublicDocumentation-Interactiveonlinedocumentation]\n)\nFields text and url are mutually exclusive.\nExamples:{\"text\": \"Hello world!\"}\n\n{\"url\": \"https://en.wikipedia.org/wiki/Pyrrhuloxia\"}",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/topicPost.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "status": {
            "main": "./lib/actions/status.js",
            "title": "Gets status of the Interpretor service",
            "description": "status",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/status.in.json",
                "out": {
                    "type": "object"
                }
            }
        }
    }
}